;##############################################################################;
; framedly.a99 - contains code that keeps VEPSEU at a constant framerate!      ;
;==============================================================================;
; This file is a part of VePseu 99!                                            ;
;                                                                              ;
; Copyright (c) 2020, Charles Thompson. All rights reserved.                   ;
;                                                                              ;
; Redistribution and use in source and binary forms, with or without           ;
; modification, are permitted provided that the following conditions are met:  ;
;                                                                              ;
; 1. Redistributions of source code must retain the above copyright notice,    ;
;    this list of conditions and the following disclaimer.                     ;
; 2. Redistributions in binary form must reproduce the above copyright notice, ;
;    this list of conditions and the following disclaimer in the documentation ;
;    and/or other materials provided with the distribution.                    ;
; 3. Neither the name of the copyright holder nor the names of its             ;
;    contributors may be used to endorse or promote products derived from this ;
;    software without specific prior written permission.                       ;
;                                                                              ;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  ;
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    ;
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   ;
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE    ;
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR          ;
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         ;
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS     ;
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      ;
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)      ;
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   ;
; POSSIBILITY OF SUCH DAMAGE.                                                  ;
;##############################################################################;

    EVEN

; We want to delay until 5.5 frames have passed
DELAY EQU 4694

; Waits until 10 frames have passed since the last .RESET_DLY
FRMDLY
; Loop until a total of more than 9.5 frames have passed
; since the last .RESET_DLY
; 1488 cycles per loop
FRMDL1
; Initialize the loop
; A1 holds the keyboard column to read from, A2 hold the keyboard row to write
; to, A3 holds the amound of rows to read
; 34 cycles in total
    CLR A1 ; 10 cycles
    LI A2, KEYS ; 12 cycles
    LI A3, 8 ; 12 cycles
;-- Load any pressed keys into memory
;-- 8 loops, 1294 cycles in total
FRMDL2
    LI CRU, >0024 ;-- 12 cycles
    LDCR A1,3 ;-- 26 cycles
    LI CRU, >0006 ;-- 12 cycles
    STCR A4, 8 ;-- 44 cycles
    INV A4 ;-- 10 cycles
    SOCB A4, *A2 ;-- 14 cycles
    AI A1, >0100 ;-- 14 cycles
    INC A2 ;-- 10 cycles
    DEC A3 ;-- 10 cycles
    JNE FRMDL2 ;-- 10 cycles, -2 at the end of the loop

; Check to see if the CRU's decrementer has reset
; 160 cycles in total
    CLR CRU ; 10 cycles
    CLR A1 ; 10 cycles
    SBO 0 ; 12 cycles
    INC CRU ; 10 cycles
    STCR A1, 15 ; 58 cycles
    DEC CRU ; 10 cycles
    SBZ 0 ; 12 cycles
    SRL A1, 1 ; 14 cycles
    CI A1, >3FFF-DELAY ; 14 cycles
    JGT FRMDL1 ; 10 cycles, -2 at end of loop

; Initialize the loop
; 10 cycles in total
    CLR CRU ; 10 cycles
; Wait for the VDP interrupt
; 32 cycles per loop
FRMDL3
    TB 2 ; 12 cycles
    JEQ FRMDL3 ; 10 cycles

; Reset the CRU timer, and return!
; 90 cycles in total
    .RESET_DLY ; 78 cycles
    RT ; 12 cycles
