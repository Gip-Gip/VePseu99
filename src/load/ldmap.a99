;##############################################################################;
; ldmap.a99 - contains code that loads a map from a given bank                 ;
;==============================================================================;
; This file is a part of VePseu 99!                                             ;
;                                                                              ;
; Copyright (c) 2020, Charles Thompson. All rights reserved.                   ;
;                                                                              ;
; Redistribution and use in source and binary forms, with or without           ;
; modification, are permitted provided that the following conditions are met:   ;
;                                                                              ;
; 1. Redistributions of source code must retain the above copyright notice,    ;
;    this list of conditions and the following disclaimer.                     ;
; 2. Redistributions in binary form must reproduce the above copyright notice, ;
;    this list of conditions and the following disclaimer in the documentation ;
;    and/or other materials provided with the distribution.                    ;
; 3. Neither the name of the copyright holder nor the names of its             ;
;    contributors may be used to endorse or promote products derived from this ;
;    software without specific prior written permission.                        ;
;                                                                              ;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  ;
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    ;
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   ;
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE    ;
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR          ;
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         ;
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS     ;
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      ;
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)      ;
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   ;
; POSSIBILITY OF SUCH DAMAGE.                                                  ;
;##############################################################################;

; Length of the map in bytes
MAPLEN  EQU >100

    EVEN

; LDMAP - loads a map from a bank
; A5 = map number
; 123,326 cycles in total
LDMAP
; Load the map's bank into memory
; 102,562 cycles in total
    MOV RTADDR, A8 ; 14 cycles
    .SRB1 ; 10 cycles
    BL @LDBANK ; 20 + 102,494 cycles
    MOV A8, RTADDR ; 14 cycles
; Copy the map from RAM bank 2 to bank 1
; This is done to simplify render code, since the screen buffer is on bank 1
; If we kept the map on bank 2 things would slow down quite a bit, and at the
; cost of only about 256 bytes of ram
; Set A5 to point to the map
; 22 cycles in total
    MOV @MAPPTR, A5 ; 22 cycles
; Set PX, PY, and PA
;110 cycles in total
    CLR PX ; 10 cycles
    CLR PY ; 10 cycles
    CLR PA ; 10 cycles
    MOVB *A5+, PX ; 20 cycles
    SWPB PX ; 10 cycles
    MOVB *A5+, PY ; 20 cycles
    SWPB PY ; 10 cycles
    MOVB *A5+, PA ; 20 cycles
    SWPB PA ; 10 cycles

; Initialize for the loop
; 24 cycles in total
; A6 points to the map in bank 1
    LI A6, RAMMAP ; 12 cycles
; A7 holds the length of the map in bytes
    LI A7, MAPLEN ; 12 cycles
; Swap to bank 2, get a byte, swap to bank 1, store a byte..
; 256 loops, 20,478 cycles in total
LDML1.
    MOVB *A5+, A8 ; 20 cycles
    .SRB0 ; 10 cycles
    MOVB A8, *A6+ ; 20 cycles
    DEC A7 ; 10 cycles
    .SRB1 ; 10 cycles
    JNE LDML1 ; 10 cycles, -2 at the end of the loop

; Set MAP to point to RAMMAP
; 12 cycles in total
    LI MAP, RAMMAP ; 12 cycles

; Initialize music stuff
; 64 cycles in total
; Set MUSI to CURMUS
    MOV @CURMUS, @MUSI ; 30 cycles
; Set the duration to 1
    LI A1, >0100 ; 12 cycles
    MOVB A1, @MUSD ; 22 cycles

; Go back to the first bank of ram
; 10 cycles in total
    .SRB0 ; 10 cycles

; Set the default notification
; 34 cycles in total
    LI A1, DNOTIF ; 12 cycles
    MOV A1, @NOTIFY ; 22 cycles

; Return!
; 12 cycles in total
    RT ; 12 cycles
